(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> grid() got an unexpected keyword argument 'maxtextlenghts'"
p3
sS'layer'
p4
S'C:\\Users\\otakai\\Desktop\\web2py\\applications\\eadtools\\controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n# -------------------------------------------------------------------------\n# This is a sample controller\n# - index is the default action of any application\n# - user is required for authentication and authorization\n# - download is for downloading files uploaded in the db (does streaming)\n# -------------------------------------------------------------------------\n\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simply replace the two lines below with:\n    return auth.wiki()\n    """\n    response.flash = T("Hello World")\n    return dict(message=T(\'Welcome to web2py!\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/bulk_register\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    also notice there is http://..../[app]/appadmin/manage/auth to allow administrator to manage users\n    """\n    return dict(form=auth())\n\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\ndef display_form():\n    form=FORM(\'Your name:\',\n              INPUT(_name=\'name\', requires=IS_NOT_EMPTY()),\n              INPUT(_type=\'submit\'))\n    if form.accepts(request,session):\n        response.flash = \'form accepted\'\n    elif form.errors:\n        response.flash = \'form has errors\'\n    else:\n        response.flash = \'please fill the form\'\n    return dict(form=form)\n\ndef disciplinas():\n    disciplinas = db(Disciplina).select()\n    return dict(disciplinas=disciplinas)\n\ndef planosdeentrega():\n    grid = SQLFORM.smartgrid(PlanoDeEntrega, \n        maxtextlenghts={\'planodeentrega.averylongtextfield\' : 256}, \n        linked_tables=[\'disciplina_id\'],\n        csv = False)\n    #planos =  db((PlanoDeEntrega.disciplina_id == Disciplina.id) &\n    #             (Disciplina.created_by == Usuario.id)).select(Usuario.first_name, Disciplina.nome, PlanoDeEntrega.tipo, PlanoDeEntrega.descricao)\n    return dict(grid=grid)\nresponse._vars=response._caller(planosdeentrega)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "C:\\Users\\otakai\\Desktop\\web2py\\gluon\\restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "C:\\Users\\otakai\\Desktop\\web2py\\applications\\eadtools\\controllers/default.py", line 85, in <module>\n  File "C:\\Users\\otakai\\Desktop\\web2py\\gluon\\globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "C:\\Users\\otakai\\Desktop\\web2py\\applications\\eadtools\\controllers/default.py", line 81, in planosdeentrega\n    csv = False)\n  File "C:\\Users\\otakai\\Desktop\\web2py\\gluon\\sqlhtml.py", line 3102, in smartgrid\n    user_signature=user_signature, **kwargs)\nTypeError: grid() got an unexpected keyword argument \'maxtextlenghts\'\n'
p11
s.